<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.lixin.web.dao.mapper_group.GroupChatMapper">
  <resultMap id="BaseResultMap" type="me.lixin.web.model_group.GroupChat">
    <id column="gc_id" jdbcType="BIGINT" property="gcId" />
    <result column="gc_url" jdbcType="VARCHAR" property="gcUrl" />
    <result column="gc_encode_char" jdbcType="VARCHAR" property="gcEncodeChar" />
    <result column="gc_update_time" jdbcType="TIMESTAMP" property="gcUpdateTime" />
    <result column="gc_user_id" jdbcType="INTEGER" property="gcUserId" />
    <result column="gc_topic_id" jdbcType="INTEGER" property="gcTopicId" />
    <result column="gc_local_id" jdbcType="INTEGER" property="gcLocalId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    gc_id, gc_url, gc_encode_char, gc_update_time, gc_user_id, gc_topic_id, gc_local_id, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_chat
    where gc_id = #{gcId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from group_chat
    where gc_id = #{gcId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="me.lixin.web.model_group.GroupChat">
    insert into group_chat (gc_id, gc_url, gc_encode_char, 
      gc_update_time, gc_user_id, gc_topic_id, 
      gc_local_id, create_time, update_time
      )
    values (#{gcId,jdbcType=BIGINT}, #{gcUrl,jdbcType=VARCHAR}, #{gcEncodeChar,jdbcType=VARCHAR}, 
      #{gcUpdateTime,jdbcType=TIMESTAMP}, #{gcUserId,jdbcType=INTEGER}, #{gcTopicId,jdbcType=INTEGER}, 
      #{gcLocalId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.lixin.web.model_group.GroupChat">
    insert into group_chat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gcId != null">
        gc_id,
      </if>
      <if test="gcUrl != null">
        gc_url,
      </if>
      <if test="gcEncodeChar != null">
        gc_encode_char,
      </if>
      <if test="gcUpdateTime != null">
        gc_update_time,
      </if>
      <if test="gcUserId != null">
        gc_user_id,
      </if>
      <if test="gcTopicId != null">
        gc_topic_id,
      </if>
      <if test="gcLocalId != null">
        gc_local_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gcId != null">
        #{gcId,jdbcType=BIGINT},
      </if>
      <if test="gcUrl != null">
        #{gcUrl,jdbcType=VARCHAR},
      </if>
      <if test="gcEncodeChar != null">
        #{gcEncodeChar,jdbcType=VARCHAR},
      </if>
      <if test="gcUpdateTime != null">
        #{gcUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gcUserId != null">
        #{gcUserId,jdbcType=INTEGER},
      </if>
      <if test="gcTopicId != null">
        #{gcTopicId,jdbcType=INTEGER},
      </if>
      <if test="gcLocalId != null">
        #{gcLocalId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.lixin.web.model_group.GroupChat">
    update group_chat
    <set>
      <if test="gcUrl != null">
        gc_url = #{gcUrl,jdbcType=VARCHAR},
      </if>
      <if test="gcEncodeChar != null">
        gc_encode_char = #{gcEncodeChar,jdbcType=VARCHAR},
      </if>
      <if test="gcUpdateTime != null">
        gc_update_time = #{gcUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gcUserId != null">
        gc_user_id = #{gcUserId,jdbcType=INTEGER},
      </if>
      <if test="gcTopicId != null">
        gc_topic_id = #{gcTopicId,jdbcType=INTEGER},
      </if>
      <if test="gcLocalId != null">
        gc_local_id = #{gcLocalId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where gc_id = #{gcId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.lixin.web.model_group.GroupChat">
    update group_chat
    set gc_url = #{gcUrl,jdbcType=VARCHAR},
      gc_encode_char = #{gcEncodeChar,jdbcType=VARCHAR},
      gc_update_time = #{gcUpdateTime,jdbcType=TIMESTAMP},
      gc_user_id = #{gcUserId,jdbcType=INTEGER},
      gc_topic_id = #{gcTopicId,jdbcType=INTEGER},
      gc_local_id = #{gcLocalId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where gc_id = #{gcId,jdbcType=BIGINT}
  </update>
</mapper>